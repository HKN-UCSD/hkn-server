/* tslint:disable */
/* eslint-disable */
/**
 * HKN API
 * HKN API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface BaseEventPayload
 */
export interface BaseEventPayload {
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  location?: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  startDate: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  endDate: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  type?: BaseEventPayloadTypeEnum;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  fbURL?: string;
  /**
   *
   * @type {string}
   * @memberof BaseEventPayload
   */
  canvaURL?: string;
}

export function BaseEventPayloadFromJSON(json: any): BaseEventPayload {
  return BaseEventPayloadFromJSONTyped(json, false);
}

export function BaseEventPayloadFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BaseEventPayload {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json['name'],
    description: json['description'],
    location: !exists(json, 'location') ? undefined : json['location'],
    startDate: json['startDate'],
    endDate: json['endDate'],
    type: !exists(json, 'type') ? undefined : json['type'],
    fbURL: !exists(json, 'fbURL') ? undefined : json['fbURL'],
    canvaURL: !exists(json, 'canvaURL') ? undefined : json['canvaURL'],
  };
}

export function BaseEventPayloadToJSON(value?: BaseEventPayload | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    location: value.location,
    startDate: value.startDate,
    endDate: value.endDate,
    type: value.type,
    fbURL: value.fbURL,
    canvaURL: value.canvaURL,
  };
}

/**
 * @export
 * @enum {string}
 */
export enum BaseEventPayloadTypeEnum {
  Professional = 'professional',
  Social = 'social',
  Technical = 'technical',
  Mentorship = 'mentorship',
}
